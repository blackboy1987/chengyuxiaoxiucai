import { Platform } from '@remax/types';
import propsAlias, { getAlias } from '../propsAlias';
import * as RuntimeOptions from '../RuntimeOptions';
describe('props alias', function () {
    beforeAll(function () {
        RuntimeOptions.apply({
            platform: Platform.ali,
            hostComponents: {
                foo: {
                    alias: {
                        camelCase: 'kebab-case',
                    },
                    props: ['kebab-case'],
                },
            },
        });
    });
    afterAll(function () {
        RuntimeOptions.reset();
    });
    it('transform className prop correctly', function () {
        expect(getAlias('className', 'any')).toBe('class');
        expect(propsAlias({
            className: 'class-name',
        }, 'any')).toEqual({
            class: 'class-name',
        });
    });
    it('transform style prop correctly', function () {
        expect(propsAlias({
            style: {
                color: '#ffffff',
                height: '2px',
                WebkitFlex: 1,
                '--color': 'red',
                '--textColor': 'blue',
                backgroundColor: 'var(--textColor)',
            },
        }, 'any')).toMatchSnapshot();
        expect(propsAlias({
            style: null,
        }, 'any')).toMatchSnapshot();
    });
    it('transform props by component type correctly', function () {
        expect(getAlias('prop', 'any')).toBe('prop');
        expect(propsAlias({
            bar: 'bar',
            camelCase: 'value',
        }, 'foo')).toEqual({
            bar: 'bar',
            'kebab-case': 'value',
        });
    });
    it('transform platform props', function () {
        expect(getAlias('ali-prop', 'any')).toBe('prop');
    });
});
