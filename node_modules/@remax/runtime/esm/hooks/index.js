import { useLayoutEffect, useContext } from 'react';
import { registerLifecycle, lifeCycleName } from '../lifecycle';
import PageContext from '../PageContext';
import AppInstanceContext from '../AppInstanceContext';
/**
 *  Page Hooks
 */
export function usePageInstance() {
    var _a;
    return (_a = useContext(PageContext)) === null || _a === void 0 ? void 0 : _a.page;
}
export { default as useNativeEffect } from './useNativeEffect';
export { default as useQuery } from './useQuery';
export function usePageEvent(eventName, callback) {
    var _a;
    var pageInstance = (_a = useContext(PageContext)) === null || _a === void 0 ? void 0 : _a.page;
    var lifeCycle = lifeCycleName(eventName);
    useLayoutEffect(function () {
        return registerLifecycle(pageInstance, lifeCycle, callback);
    });
}
/**
 * App Hooks
 */
export function useAppEvent(eventName, callback) {
    var lifeCycle = lifeCycleName(eventName);
    useLayoutEffect(function () {
        return registerLifecycle(AppInstanceContext, lifeCycle, callback);
    });
}
