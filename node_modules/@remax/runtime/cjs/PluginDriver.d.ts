interface Plugin {
    onAppConfig?: ({ config }: {
        config: any;
    }) => any;
    onPageConfig?: ({ config, page }: {
        config: any;
        page: string;
    }) => any;
    onAppComponent?: ({ component }: {
        component: React.ComponentType;
    }) => React.ComponentType;
    onPageComponent?: ({ component, page }: {
        component: React.ComponentType;
        page: string;
    }) => React.ComponentType;
}
export default class PluginDriver {
    plugins: Plugin[];
    constructor(plugins: Plugin[]);
    onAppConfig(config: any): any;
    onPageConfig({ config, page }: {
        config: any;
        page: string;
    }): any;
    onAppComponent(component: React.ComponentType): import("react").ComponentType<{}>;
    onPageComponent({ component, page }: {
        component: React.ComponentType;
        page: string;
    }): import("react").ComponentType<{}>;
}
export {};
