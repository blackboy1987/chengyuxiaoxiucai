var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { formatDisplayName } from './formatDisplayName';
export function createHostComponent(name, component) {
    if (component) {
        return component;
    }
    var Component = function (props, ref) {
        var _a = props.children, children = _a === void 0 ? [] : _a;
        return React.createElement(name, __assign(__assign({}, props), { ref: ref }), children);
    };
    if (process.env.NODE_ENV === 'development') {
        Component.displayName = formatDisplayName(name);
    }
    return React.forwardRef(Component);
}
