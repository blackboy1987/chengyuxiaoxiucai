"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shared_1 = require("@remax/shared");
const RuntimeOptions_1 = require("../webpack/plugins/RuntimeOptions");
const lifecycleEvents = ['onShareAppMessage'];
exports.default = (appFilename) => {
    let skip = false;
    return {
        pre(state) {
            const importer = shared_1.slash(state.opts.filename);
            // TODO: app 的依赖也要收集
            skip = importer !== appFilename;
            if (skip) {
                return;
            }
            RuntimeOptions_1.appClassEvents.delete(importer);
        },
        visitor: {
            // 解析 class properties 编译后的代码
            StringLiteral: (path, state) => {
                var _a, _b;
                if (skip) {
                    return;
                }
                const importer = shared_1.slash(state.file.opts.filename);
                const { node } = path;
                // 只要生命周期 Literal 存在就标记为用到了生命周期
                if (!lifecycleEvents.includes(node.value)) {
                    return;
                }
                RuntimeOptions_1.appClassEvents.set(importer, (_b = (_a = RuntimeOptions_1.appClassEvents.get(importer)) === null || _a === void 0 ? void 0 : _a.add(node.value)) !== null && _b !== void 0 ? _b : new Set([node.value]));
            },
            Identifier: (path, state) => {
                var _a, _b;
                if (skip) {
                    return;
                }
                const importer = shared_1.slash(state.file.opts.filename);
                const { node } = path;
                // 只要生命周期 Identifer 存在就标记为用到了生命周期
                if (!lifecycleEvents.includes(node.name)) {
                    return;
                }
                RuntimeOptions_1.appClassEvents.set(importer, (_b = (_a = RuntimeOptions_1.appClassEvents.get(importer)) === null || _a === void 0 ? void 0 : _a.add(node.name)) !== null && _b !== void 0 ? _b : new Set([node.name]));
            },
        },
    };
};
