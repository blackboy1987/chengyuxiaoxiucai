"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
const RuntimeOptions_1 = require("../webpack/plugins/RuntimeOptions");
const shared_1 = require("@remax/shared");
const lifecycleEvents = ['onPageScroll', 'onShareAppMessage', 'onShareTimeline'];
exports.default = (options) => {
    let skip = false;
    return {
        pre(state) {
            const importer = shared_1.slash(state.opts.filename);
            const root = shared_1.slash(path.join(options.cwd, options.rootDir));
            skip = !importer.startsWith(root);
            if (!skip) {
                RuntimeOptions_1.pageClassEvents.delete(importer);
            }
        },
        visitor: {
            // 解析 class properties 编译后的代码
            StringLiteral: (path, state) => {
                var _a, _b;
                if (skip) {
                    return;
                }
                const { node } = path;
                const importer = shared_1.slash(state.file.opts.filename);
                // 只要生命周期 Literal 存在就标记为用到了生命周期
                if (!lifecycleEvents.includes(node.value)) {
                    return;
                }
                RuntimeOptions_1.pageClassEvents.set(importer, (_b = (_a = RuntimeOptions_1.pageClassEvents.get(importer)) === null || _a === void 0 ? void 0 : _a.add(node.value)) !== null && _b !== void 0 ? _b : new Set([node.value]));
            },
            Identifier: (path, state) => {
                var _a, _b;
                if (skip) {
                    return;
                }
                const { node } = path;
                const importer = shared_1.slash(state.file.opts.filename);
                // 只要生命周期 Identifer 存在就标记为用到了生命周期
                if (!lifecycleEvents.includes(node.name)) {
                    return;
                }
                RuntimeOptions_1.pageClassEvents.set(importer, (_b = (_a = RuntimeOptions_1.pageClassEvents.get(importer)) === null || _a === void 0 ? void 0 : _a.add(node.name)) !== null && _b !== void 0 ? _b : new Set([node.name]));
            },
        },
    };
};
