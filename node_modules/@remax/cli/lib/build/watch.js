"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chokidar_1 = __importDefault(require("chokidar"));
const SingleEntryPlugin_1 = __importDefault(require("webpack/lib/SingleEntryPlugin"));
const getEntries_1 = require("../getEntries");
let isRunning = true;
function watch(options, api, compiler, watcher, addEntry = false) {
    // 监听额外的文件
    const pages = getEntries_1.getPages(options, api);
    chokidar_1.default
        .watch([`${options.rootDir}/app.config.{js,ts}`], {
        cwd: options.cwd,
    })
        .on('change', () => {
        if (isRunning)
            return;
        if (addEntry) {
            const nextPages = getEntries_1.getPages(options, api);
            nextPages.forEach(np => {
                if (!pages.find(p => p.filename === np.filename)) {
                    new SingleEntryPlugin_1.default(null, np.filename, np.name).apply(compiler);
                }
            });
        }
        watcher.invalidate();
    });
    chokidar_1.default
        .watch([`${options.rootDir}/**/!(app).config.{js,ts}`], {
        cwd: options.cwd,
    })
        .on('all', () => {
        if (isRunning)
            return;
        watcher.invalidate();
    });
    compiler.hooks.watchRun.tap('watchRun', () => {
        isRunning = true;
    });
    compiler.hooks.done.tap('done', () => {
        isRunning = false;
    });
    return watcher;
}
exports.default = watch;
