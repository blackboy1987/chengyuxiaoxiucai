"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ejs_1 = __importDefault(require("ejs"));
const getAppConfig_1 = __importDefault(require("../../utils/getAppConfig"));
const getEntries_1 = __importDefault(require("../../../getEntries"));
const web_1 = require("../../utils/web");
const PLUGIN_NAME = 'RemaxWebEntryWatcherPlugin';
class WebEntryWatcherPlugin {
    constructor(virtualModules, entryTemplate, options, api) {
        this.virtualModules = virtualModules;
        this.entryTemplate = entryTemplate;
        this.remaxOptions = options;
        this.api = api;
    }
    apply(compiler) {
        compiler.hooks.watchRun.tap(PLUGIN_NAME, () => {
            this.invalidEntry();
        });
    }
    invalidEntry() {
        const entries = getEntries_1.default(this.remaxOptions, this.api);
        const appConfig = getAppConfig_1.default(this.remaxOptions, this.api);
        this.virtualModules.writeModule(web_1.entryName(this.remaxOptions), ejs_1.default.render(this.entryTemplate, {
            pages: web_1.generatePageRoutesInfo(this.remaxOptions, entries.pages, this.api),
            appConfig,
        }));
    }
}
exports.default = WebEntryWatcherPlugin;
