"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPages = void 0;
const path_1 = __importDefault(require("path"));
const shared_1 = require("@remax/shared");
const paths_1 = require("./build/utils/paths");
const getAppConfig_1 = __importDefault(require("./build/utils/getAppConfig"));
function getPages(options, api) {
    const appConfig = getAppConfig_1.default(options, api);
    const ROOT_DIR = path_1.default.join(options.cwd, options.rootDir);
    const subPackages = appConfig.subPackages || appConfig.subpackages || [];
    if (!appConfig.pages || appConfig.pages.length === 0) {
        throw new Error('app.config.js|ts 并未配置页面参数');
    }
    // 页面
    const pages = appConfig.pages.reduce((ret, page) => [
        ...ret,
        {
            name: page,
            filename: shared_1.slash(paths_1.searchJSFile(path_1.default.join(ROOT_DIR, page), options.target)),
        },
    ], []);
    // 分包页面
    subPackages.forEach((pack) => {
        pages.push(...pack.pages.reduce((ret, page) => [
            ...ret,
            {
                name: shared_1.slash(path_1.default.join(pack.root, page)),
                filename: shared_1.slash(paths_1.searchJSFile(path_1.default.join(ROOT_DIR, pack.root, page), options.target)),
            },
        ], []));
    });
    return pages.filter(page => !!page.filename);
}
exports.getPages = getPages;
function getEntries(options, api) {
    const entries = {
        app: {
            name: 'app',
            filename: shared_1.slash(paths_1.searchJSFile(path_1.default.join(options.cwd, options.rootDir, 'app'), options.target)),
        },
        pages: getPages(options, api),
    };
    return entries;
}
exports.default = getEntries;
